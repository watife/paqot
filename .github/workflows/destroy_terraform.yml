name: 'Terraform staging and production deploy'

on:
  workflow_dispatch:

jobs:
  terraform_destroy:
    name: "Terraform Destroy"
    runs-on: ubuntu-latest

    env:
      AWS_DEFAULT_REGION: "us-west-2"
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # Use the deploy folder as the working directory
    defaults:
      run:
        working-directory: ./deploy

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

      - name: Terraform workspace
        if: github.ref == 'refs/heads/production'
        run: terraform workspace new staging || terraform workspace select staging

      - name: Terraform production workspace
        if: github.ref == 'refs/heads/production'
        run: terraform workspace new production || terraform workspace select production

      - name: Terraform destroy
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform destroy -auto-approve

      - name: Terraform production destroy
        if: github.ref == 'refs/heads/production' && github.event_name == 'push'
        run: terraform destroy -auto-approve

